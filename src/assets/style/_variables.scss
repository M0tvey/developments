$rem: 20;

$xs: 576px;
$sm: 768px;
$md: 992px;
$lg: 1200px;
$xl: 1890px;

$xsDown: 575.98px;
$smDown: 767.98px;
$mdDown: 991.98px;
$lgDown: 1199.98px;
$xlDown: 1889.98px;


// $container-width: 1226px; // Максимальная ширина контейнера контента
// $container-padding: 15px; // Отступы слева и справа у контейнера
// $grid-container-width: 100%; // Ширина контейнера сетки
// $grid-cols: 12; // Количество колонок в сетке
// $grid-gap: 20px; // Расстояние между колонками
// $grid-gap-vertical: 20px; // Расстояние между строками в сетке
// Пример @media (min-width: $md) {}

$font-main: Arial, sans-serif;
$font_1: $font-main;
$bg_color: #2d2d2d;
$color_1: #ccc;

$color_1: #2F2F2F;
$color_2: #FF292A;

$max_width: 1340px;

$breakpoints: (
  'xlll': 1750px,
  'xll': 1400px,
  'xxl': 1280px,
  'xl': 1200px,
  'lg': 992px,
  'mdd': 900px,
  'md': 768px,
  'sm': 576px,
  'xxs': 500px,
  'xss': 400px,
  'xs': 320px
);

@mixin size($height, $width: "") {
  @if $width == "" { $width: $height }
  height: $height;
  width: $width;
}

@mixin transition($property: '', $time: 0.2, $timing-function: ease-in-out) {
  @if $property == '' {
		$property: all;
		transition: $property #{$time}s $timing-function;
	} @else {
		$prop: '';
		@for $i from 1 through length($property) {
			$prop: #{$prop} nth($property, $i); 
		}

		transition-property: #{$prop};
		transition-duration: #{$time}s;
		transition-timing-function: #{$timing-function};
	}
}

@mixin small_code {
  pre {
    margin: 0;

    code {
      padding: .5em;
    }
  }
}

@mixin screen($width, $type: max) {
  @if map_has_key($breakpoints, $width) {
    $width: map_get($breakpoints, $width);

    @if $type == max {
      $width: $width - 1px;
    }

    @media only screen and (#{$type}-width: $width) {
      @content;
    }
  }
}